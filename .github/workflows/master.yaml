name: Development deployment
on:
  push:
    branches:
      - master

jobs:
  deploy-development:
    name: Development deployment
    environment: 'development'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to production
        run: echo 'Deploy to production'


  deploy-production-approval-check:
    name: Check if approval required
    needs: deploy-development
    runs-on: ubuntu-latest
    environment: 'development'
    outputs:
      with_approval: ${{ steps.determine_approval_required.outputs.approval_required}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.TOKEN }}
          fetch-depth: 0
      - name: Determine if approval is required for production deployment
        id: determine_approval_required
        run: |
          set -x
          commits_ahead_of_production=$(git --no-pager log origin/production..master --pretty=format:"%B")
          if [[ $commits_ahead_of_production == *"[INFRA]"* ]]; then
            echo "approval_required=true" >> "$GITHUB_OUTPUT"
          else
            echo "approval_required=false" >> "$GITHUB_OUTPUT"
          fi
          

  deploy-production-manual-trigger:
    if: ${{ needs.deploy-production-approval-check.outputs.with_approval == 'true' }}
    needs: deploy-production-approval-check
    environment: 'production'
    name: Approve production deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.TOKEN }}
          fetch-depth: 0
      - name: Merge master into production branch
        run: |
          git status
          git config --global user.name "rafalry"
          git config --global user.email "rafalry@users.noreply.github.com"
          git fetch
          git checkout production || git checkout -b production
          git pull origin production
          git merge --ff-only --no-edit master
      - name: Push changes to production branch
        run: |
          git push origin production


  deploy-production-auto-trigger:
    if: ${{ needs.deploy-production-approval-check.outputs.with_approval == 'false' }}
    needs: deploy-production-approval-check
    environment: 'production-auto'
    name: Auto trigger production deployment
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}
      cancel-in-progress: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.TOKEN }}
          fetch-depth: 0
      - name: Merge master into production branch
        run: |
          git status
          git config --global user.name "rafalry"
          git config --global user.email "rafalry@users.noreply.github.com"
          git fetch
          git checkout production || git checkout -b production
          git pull origin production
          git merge --ff-only --no-edit master
      - name: Push changes to production branch
        run: |
          git push origin production
